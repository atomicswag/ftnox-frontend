(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['about.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>About Us</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div class=\"container\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-body\">\n            <p class=\"lead\">\n                FtNox is a next generation cryptocurrency exchange done right.\n            </p>\n            <h3>Secure</h3>\n            <ul>\n                <li>Dedicated Hosting</li>\n                <li>Cold Storage Management</li>\n                <li>Two-Factor Authentication</li>\n                <li>Audit Trail</li>\n            </ul>\n            <h3>Performant</h3>\n            <p>We provide correctness without sacrificing speed. Each order is guaranteed to execute quickly.</p>\n            <h3>Customizable</h3>\n            <p>Branding is easy. Our interfaces for your customers and your staff are intuitive. See for yourself at our <a>partner sites</a>.</p>\n            </div>\n        </div>\n    </div>\n</div>\n";
  },"useData":true});
templates['account.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";
  return "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>Account</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<!-- doesn't fit because tabs are shifted up -->\n<!-- <div id=\"app-alerts\" class=\"container\"></div> -->\n\n<div class=\"container\">\n    <div class=\"row ftnox-tab-container\">\n\n        <ul class=\"ftnox-tabs nav nav-pills nav-stacked col-xs-3\">\n            <li class=\"active\"><a href=\"#balance\" data-toggle=\"tab\">Balance</a></li>\n            <li><a href=\"#history\" data-toggle=\"tab\">History</a></li>\n            <li><a href=\"#security\" data-toggle=\"tab\">Security</a></li>\n            <li><a href=\"#api\" data-toggle=\"tab\">API Credentials</a></li>\n        </ul>\n\n        <div class=\"ftnox-tab-content tab-content col-xs-9\">\n            <div class=\"tab-pane active panel panel-default\" id=\"balance\">\n                <div class=\"panel-heading panel-heading-lg\">\n                    <h4 class=\"panel-title\">Balance</h4>\n                </div>\n                <div class=\"panel-body\">\n                    "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "account_balance", (depth0 && depth0.balance), {"name":"render","hash":{},"data":data})))
    + "\n                </div>\n            </div>\n\n            <div class=\"tab-pane panel panel-default\" id=\"history\">\n                <div class=\"panel-heading panel-heading-lg\">\n                    <h4 class=\"panel-title\">History</h4>\n                    <ul class=\"pagination\">\n                        <li class=\"disabled\"><a href=\"#\">&larr;</a></li>\n                        <li class=\"active\"><a href=\"#\">1 <span class=\"sr-only\">(current)</span></a></li>\n                        <li><a href=\"#\">2</a></li>\n                        <li><a href=\"#\">3</a></li>\n                        <li><a href=\"#\">4</a></li>\n                        <li><a href=\"#\">5</a></li>\n                        <li><a href=\"#\">&rarr;</a></li>\n                    </ul>\n                </div>\n                <div class=\"panel-body\">\n                    "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "account_transactions", {"name":"render","hash":{},"data":data})))
    + "\n\n                </div>\n            </div>\n\n            <div class=\"tab-pane panel panel-default\" id=\"security\">\n                <div class=\"panel-heading panel-heading-lg\">\n                    <h4 class=\"panel-title\">Security</h4>\n                </div>\n                <div class=\"panel-body\">\n                    <p>Stuff goes here.</p>\n                </div>\n            </div>\n\n            <div class=\"tab-pane panel panel-default\" id=\"api\">\n                <div class=\"panel-heading panel-heading-lg\">\n                    <h4 class=\"panel-title\">API Credentials</h4>\n                </div>\n                <div class=\"panel-body\">\n                    <p>Your API Key: <span class=\"code js-api-key\">"
    + escapeExpression(((helper = helpers.apiKey || (depth0 && depth0.apiKey)),(typeof helper === functionType ? helper.call(depth0, {"name":"apiKey","hash":{},"data":data}) : helper)))
    + "</span></p>\n\n                    <p>Example request:</p>\n\n                    <pre>\nPOST https://ftnox.com/account/balance\nContent-Type: application/x-www-form-urlencoded\n\napi_key=<span class=\"js-api-key\">"
    + escapeExpression(((helper = helpers.apiKey || (depth0 && depth0.apiKey)),(typeof helper === functionType ? helper.call(depth0, {"name":"apiKey","hash":{},"data":data}) : helper)))
    + "</span></pre>\n\n\n                    <hr />\n                    <h5>More Information</h5>\n                    <p>Please visit the <a href=\"/#api\">API docs</a> for more information.</p>\n                </div>\n            </div>\n        </div>\n\n    </div><!--.row-->\n</div><!--.container-->\n";
},"useData":true});
templates['account_balance.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;
  return "\n    <div class=\"well clearfix\" data-coin=\""
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n        <div class=\"row\">\n        <div class=\"col-xs-5\">\n            <h4><span class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, depth0, {"name":"divide8","hash":{},"data":data})))
    + "</span> "
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</h4>\n        </div>\n            <a href=\"#\" class=\"btn btn-custom js-withdraw col-xs-3\">\n                <span class=\"glyphicon glyphicon-circle-arrow-up\"></span>\n                Withdraw <strong>"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</strong>\n            </a>\n            <a href=\"#\" class=\"btn btn-custom js-deposit col-xs-3\">\n                <span class=\"glyphicon glyphicon-circle-arrow-down\"></span>\n                Deposit <strong>"
    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</strong>\n            </a>\n        </div>\n    </div>\n";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<div class=\"js-account-balance account-balance\">\n";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.balance), {"name":"each","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</div>\n";
},"useData":true});
templates['account_deposit.html'] = template({"1":function(depth0,helpers,partials,data) {
  return "\n            <div class=\"modal-body\">\n                TODO\n            </div>\n            ";
},"3":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "\n            <div class=\"modal-body\">\n                <div class=\"modal-alerts\"></div>\n                <p>Deposit address for "
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + ": <span class=\"js-deposit-address address\">"
    + escapeExpression(((helper = helpers.depositAddress || (depth0 && depth0.depositAddress)),(typeof helper === functionType ? helper.call(depth0, {"name":"depositAddress","hash":{},"data":data}) : helper)))
    + "</span></p>\n                <div class=\"alert alert-warning\">\n                    <strong>Warning!</strong>\n                    Do NOT deposit coins directly from your miner.\n                </div>\n                <hr />\n                <h4>All your deposits:</h4>\n                <div class=\"js-deposits\">\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-custom\" data-dismiss=\"modal\">Close</button>\n            </div>\n            ";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = "<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                <h4 class=\"modal-title\">Deposit "
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "</h4>\n            </div>\n            ";
  stack1 = (helper = helpers.ifCond || (depth0 && depth0.ifCond) || helperMissing,helper.call(depth0, (depth0 && depth0.coin), "==", "USD", {"name":"ifCond","hash":{},"fn":this.program(1, data),"inverse":this.program(3, data),"data":data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n        </div>\n    </div>\n</div>\n";
},"useData":true});
templates['account_deposits_list.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.deposits), {"name":"each","hash":{},"fn":this.program(2, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n";
},"2":function(depth0,helpers,partials,data) {
  var stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = "\n<tr>\n    <td class=\"date\">"
    + escapeExpression((helper = helpers.formatDate || (depth0 && depth0.formatDate) || helperMissing,helper.call(depth0, (depth0 && depth0.time), {"name":"formatDate","hash":{
    'format': ("YYYY-MM-DD hh:mma")
  },"data":data})))
    + "</td>\n    <td class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.amount), {"name":"divide8","hash":{},"data":data})))
    + "</td>\n    ";
  stack1 = (helper = helpers.ifCond || (depth0 && depth0.ifCond) || helperMissing,helper.call(depth0, (depth0 && depth0.status), "==", 0, {"name":"ifCond","hash":{},"fn":this.program(3, data),"inverse":this.program(5, data),"data":data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</tr>\n";
},"3":function(depth0,helpers,partials,data) {
  return "\n    <td class=\"unconfirmed\">unconfirmed</td>\n    ";
  },"5":function(depth0,helpers,partials,data) {
  return "\n    <td class=\"confirmed\">confirmed</td>\n    ";
  },"7":function(depth0,helpers,partials,data) {
  return "\n<tr>\n    <td colspan=\"3\" style=\"text-align: center;\">You have no deposits</td>\n</tr>\n";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<table class=\"deposits-list table table-striped table-condensed bordered\">\n<thead><tr>\n    <th>Date</th>\n    <th>Amount</th>\n    <th>Confirmations</th>\n</tr></thead>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.deposits), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.program(7, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</table>\n";
},"useData":true});
templates['account_transactions.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th>Date</th>\n            <th>Transaction</th>\n            <th></th>\n            <th>Amount</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"date\">04/07/2014</td>\n            <td class=\"comment\">You sold DOGE</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-time\"></span></td>\n            <td class=\"amount red\">-974.32 DOGE</td>\n        </tr>\n        <tr>\n            <td class=\"date\">04/07/2014</td>\n            <td class=\"comment\">You sold DOGE</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-time\"></span></td>\n            <td class=\"amount red\">-2000.0 DOGE</td>\n        </tr>\n        <tr>\n            <td class=\"date\">04/07/2014</td>\n            <td class=\"comment\">You sold DOGE</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-time\"></span></td>\n            <td class=\"amount red\">-2000.0 DOGE</td>\n        </tr>\n        <tr>\n            <td class=\"date\">04/02/2014</td>\n            <td class=\"comment\">You purchased DOGE</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+31.337 DOGE</td>\n        </tr>\n        <tr>\n            <td class=\"date\">04/01/2014</td>\n            <td class=\"comment\">You received BTC from an external account</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">03/31/2014</td>\n            <td class=\"comment\">You sold LTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount red\">-43.3432 LTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">03/17/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+10.74331 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">03/03/2014</td>\n            <td class=\"comment\">You received LTC from an external account</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+373.40 LTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">02/25/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">02/21/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">02/18/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">02/12/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">02/04/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">01/30/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">01/23/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">01/14/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n        <tr>\n            <td class=\"date\">01/02/2014</td>\n            <td class=\"comment\">You purchased BTC</td>\n            <td class=\"status\"><span class=\"glyphicon glyphicon-ok\"></span></td>\n            <td class=\"amount green\">+1.0 BTC</td>\n        </tr>\n    </tbody>\n</table>\n";
  },"useData":true});
templates['account_withdraw.html'] = template({"1":function(depth0,helpers,partials,data) {
  return "\n            <div class=\"modal-body\">\n                TODO\n            </div>\n            ";
},"3":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;
  return "\n            <form class=\"form-withdraw form-horizontal\">\n                <input name=\"coin\" type=\"hidden\" value=\""
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "\"/>\n                <div class=\"modal-body\">\n                    <div class=\"modal-alerts\"></div>\n                    <div class=\"form-group\">\n                        <label for=\"\" class=\"col-xs-3 control-label\">Balance:</label>\n                        <div class=\"col-xs-8\">\n                            <span class=\"js-amount amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.amount), {"name":"divide8","hash":{},"data":data})))
    + "</span> &nbsp;"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"toAddress\" class=\"col-xs-3 control-label\">To:</label>\n                        <div class=\"col-xs-8\">\n                            <input name=\"toAddress\" type=\"text\" class=\"form-control\" placeholder=\"Destination address\" required autofocus>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" style=\"margin-bottom:30px;\">\n                        <label for=\"amount\" class=\"col-xs-3 control-label\">Amount:</label>\n                        <div class=\"col-xs-4\">\n                            <div class=\"input-group\">\n                                <input name=\"amount\" type=\"text\" class=\"form-control\" placeholder=\"0.00\" required>\n                                <span class=\"input-group-addon\"><small>"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "</small></span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"js-my-withdrawals\">\n                        <h4>"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + " withdrawals:</h4>\n                        <div class=\"js-withdrawals\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                    <button class=\"btn btn-custom\" type=\"submit\">Withdraw</button>\n                </div>\n            </form>\n            ";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = "<div class=\"modal fade\">\n    <div class=\"modal-dialog\" style=\"width: 700px;\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                <h4 class=\"modal-title\">Withdraw "
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "</h4>\n            </div>\n            ";
  stack1 = (helper = helpers.ifCond || (depth0 && depth0.ifCond) || helperMissing,helper.call(depth0, (depth0 && depth0.coin), "==", "USD", {"name":"ifCond","hash":{},"fn":this.program(1, data),"inverse":this.program(3, data),"data":data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n        </div>\n    </div>\n</div>\n";
},"useData":true});
templates['account_withdrawals_list.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.withdrawals), {"name":"each","hash":{},"fn":this.program(2, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n";
},"2":function(depth0,helpers,partials,data) {
  var helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";
  return "\n<tr>\n    <td class=\"small date\">\n        "
    + escapeExpression((helper = helpers.formatDate || (depth0 && depth0.formatDate) || helperMissing,helper.call(depth0, (depth0 && depth0.time), {"name":"formatDate","hash":{
    'format': ("YYYY-MM-DD hh:mma")
  },"data":data})))
    + "<br />\n    </td>\n    <td class=\"address\">"
    + escapeExpression(((helper = helpers.toAddress || (depth0 && depth0.toAddress)),(typeof helper === functionType ? helper.call(depth0, {"name":"toAddress","hash":{},"data":data}) : helper)))
    + "</td>\n    <td class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.amount), {"name":"divide8","hash":{},"data":data})))
    + "</td>\n    <td class=\"small\">"
    + escapeExpression(((helper = helpers.statusText || (depth0 && depth0.statusText)),(typeof helper === functionType ? helper.call(depth0, {"name":"statusText","hash":{},"data":data}) : helper)))
    + "</td>\n</tr>\n";
},"4":function(depth0,helpers,partials,data) {
  return "\n<tr>\n    <td colspan=\"4\" style=\"text-align: center;\">\n        You have no withdrawals.\n    </td>\n</tr>\n";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<table class=\"withdrawals-list table table-striped table-condensed bordered\">\n<thead><tr>\n    <th>Date</th>\n    <th>To</th>\n    <th>Amount</th>\n    <th>Status</th>\n</tr></thead>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.withdrawals), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.program(4, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</table>\n";
},"useData":true});
templates['alert.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "<div class=\"alert alert-warning alert-dismissable\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\n    <strong>"
    + escapeExpression(((helper = helpers.type || (depth0 && depth0.type)),(typeof helper === functionType ? helper.call(depth0, {"name":"type","hash":{},"data":data}) : helper)))
    + ":</strong> "
    + escapeExpression(((helper = helpers.message || (depth0 && depth0.message)),(typeof helper === functionType ? helper.call(depth0, {"name":"message","hash":{},"data":data}) : helper)))
    + "\n</div>\n";
},"useData":true});
templates['api.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>API Documentation</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div class=\"container\">\n\n    <div class=\"panel panel-default\">\n\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">General Information</h3>\n        </div>\n\n        <div class=\"panel-body\">\n\n            \n            <h4>HTTP method & parameters</h4>\n            <p>\n                The server accepts all parameters in the form of <code>x-www-form-urlencoded</code> POST parameters.\n            </p>\n            <br />\n\n            <h4>Authentication</h4>\n            <p>\n                All API requests must include the <code>api_key</code> parameter. You can find them <a href=\"/#account\">here</a>.<br/>\n                In the near future, HMAC-SHA512 signatures and incrementing nonces will be used.\n            </p>\n<pre>\nSample request to /account/balance:\n\nPOST https://ftnox.com/account/balance\nContent-Type: application/x-www-form-urlencoded\n\napi_key=MY_API_KEY\n</pre>\n            <br />\n\n            <h4>Units</h4>\n            <p>\n                All units are in Satoshis (1/100000000).<br />\n                All timestamps are seconds from epoch UTC.\n            </p>\n\n    </div></div><!--panel-->\n    <div class=\"panel panel-default\">\n\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Account API Calls</h3>\n        </div>\n\n        <div class=\"panel-body\">\n\n            \n            <h4>Balance</h4>\n<pre>\nGET /account/balance\nParams: None\n\nResponse JSON:\n{\n    status: \"OK\",\n    data: {\n        \"BTC\":  10000,\n        \"DOGE\": 10000,\n        \"LTC\":  10000,\n        ...\n    }\n}\n</pre>\n            <br />\n\n            <h4>Deposit Address</h4>\n<pre>\nGET /account/deposit_address\nParams:\n    coin:   The type of coin, e.g. \"BTC\"\n\nResponse JSON:\n{\n    status: \"OK\",\n    data:   \"1E9jy9377qyUCjHYTeo3XPRDDLeJBku8cU\"\n}\n</pre>\n            <br />\n\n            <h4>List Deposits</h4>\n<pre>\nGET /account/deposits\nParams:\n    address:    Deposit address, as returned by a call to '/account/deposit_address'.\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": [\n        {\n            \"coin\": \"BTC\",\n            \"txid\": \"e3985f8279169d572ae1b3e89d9b449e35bf2e2c8bc1262c5f648c28df059055\",\n            \"vout\": 0,\n            \"blockhash\": \"0000000000000000ac2c5fe4942a7d6baa8cb2ff6bc9932e9eb23a5f15b8e939\",\n            \"blockheight\": 289635,\n            \"address\": \"1E9jy9377qyUCjHYTeo3XPRDDLeJBku8cU\",\n            \"userId\": 1,\n            \"amount\": 500000,\n            \"scriptPk\": \"76a9149040d4a7c8deced4a8d3805f2bbbdc81b82a039288ac\",\n            \"orphaned\": 0,\n            \"credited\": 1,\n            \"confirms\": 2158,\n            \"time\": 1394332995\n        },\n        ...\n    ]\n}\n</pre>\n            <br />\n\n            <h4>Withdraw</h4>\n<pre>\nPOST /account/withdraw\nParams:\n    to_address: The address to send the coins to\n    coin:       The type of coin, e.g. \"BTC\"\n    amount:     The amount to withdraw in Satoshis\n\nResponse JSON:  The resulting balance. See /account/balance.\n</pre>\n            <br />\n\n            <h4>List Withdraws</h4>\n<pre>\nGET /account/withdrawals\nParams:\n    coin:       The type of coin, e.g. \"BTC\"\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"userId\": 1,\n            \"wallet\": \"main\",\n            \"coin\": \"BTC\",\n            \"toAddress\": \"1E9jy9377qyUCjHYTeo3XPRDDLeJBku8cU\",\n            \"amount\": 500000,\n            \"status\": 1,\n            \"time\": 1395037039\n        },\n        ...\n    ]\n}\n</pre>\n\n        </div></div><!--panel-->\n        <div class=\"panel panel-default\">\n\n            <div class=\"panel-heading\">\n                <h3 class=\"panel-title\">Exchange API Calls</h3>\n            </div>\n\n            <div class=\"panel-body\">\n\n                \n                <h4>List Markets</h4>\n<pre>\nGET /exchange/markets\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": [\n        {\n            \"coin\": \"DOGE\",\n            \"basisCoin\": \"BTC\",\n            \"last\": \"0.0000e+00\"\n        },\n        {\n            \"coin\": \"LTC\",\n            \"basisCoin\": \"BTC\",\n            \"last\": \"0.0000e+00\"\n        },\n        ...\n    ]\n}\n</pre>\n                <br />\n\n                <h4>Orderbook</h4>\n<pre>\nGET /exchange/orderbook\n\nTODO: document\n</pre>\n                <br />\n\n                <h4>Historical Prices</h4>\n<pre>\nGET /exchange/pricelog\n\nTODO: document\n</pre>\n                <br />\n\n                <h4>Place Order</h4>\n<pre>\nPOST /exchange/add_order\nParams:\n    market:     The market to enter order into, e.g. \"DOGE/BTC\"\n    amount:     The amount of coins (e.g. DOGE) to buy or sell, in satoshis.\n    price:      The price of a coin (e.g. DOGE) in basis coins (e.g. BTC).\n                This is a floating point number, like 0.00000124.\n                The number is rounded to 5 significant digits.\n    order_type: \"B\" = bid, \"A\" = ask\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": {\n        \"id\": 1,\n        ... // order data\n    }\n}\n</pre>\n                <br />\n\n                <h4>Cancel Order</h4>\n<pre>\nPOST /exchange/cancel_order\nParams:\n    id:         The order id, a long positive integer.\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": \"CANCELED\"\n}\n</pre>\n                <br />\n\n                <h4>List Pending Orders</h4>\n<pre>\nGET /exchange/pending_orders\n\nResponse JSON:\n{\n    \"status\": \"OK\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"coin\": \"DOGE\",\n            \"basisCoin\": \"BTC\",\n            \"status\": 0,            // 0 = pending, 1 = reserved, 2 = complete, 3 = canceled\n            \"type\": \"B\",            // \"B\" = bid, \"A\" = ask\n            \"amount\": 1000000000,   // max amount of coins (e.g. DOGE) to purchase for bids, to sell for asks\n            \"basisAmount\": 100000,  // max amount of basis coins (e.g. BTC) to spend for bids, to receive for asks\n            \"filled\": 0,            // amount of coins purchased for bids, sold for asks\n            \"basisFilled\": 0        // amount of basis coins spent for bids, received for asks\n            \"basisFeeRatio\": 0,     // fee schedule, 0.001 = 0.1%\n            \"basisFee\": 0,          // max fee to pay\n            \"basisFeeFilled\": 0,    // amount of fee paid\n            \"price\": 0.0001,        // price in basis coins per coin\n            \"time\": 1395638636,\n        },\n        ...\n    ]\n}\n</pre>\n\n            </div>\n        </div>\n\n</div></div><!--panel-->\n\n</div><!--.container-->\n";
},"useData":true});
templates['beta.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div id=\"site-index\">\n    <div class=\"section section-top\">\n        <div class=\"container\">\n            <span class=\"glyphicon glyphicon-transfer\"></span>\n            <div class=\"on-top\">\n                <h1>Launch Your Bitcoin Exchange.</h1>\n                <p>We provide expert technology and hosting for your cryptocurrency exchange.</p>\n                <a id=\"request-invite\" href=\"#signup\" class=\"btn btn-custom-dark\">Request Invitation</a>\n            </div>\n        </div>\n    </div><!--.section-->\n\n    <div class=\"section\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-xs-4\">\n                    <h2>Secure</h2>\n                    <ul>\n                        <li>Dedicated Hosting</li>\n                        <li>Cold Storage Management</li>\n                        <li>Two-Factor Authentication</li>\n                        <li>Audit Trail</li>\n                    </ul>\n                </div>\n                <div class=\"col-xs-4\">\n                    <h2>Performant</h2>\n                    <p>We provide correctness without sacrificing speed. Each order is guaranteed to execute quickly.</p>\n                </div>\n                <div class=\"col-xs-4\">\n                    <h2>Customizable</h2>\n                    <p>Branding is easy. Our interfaces for your customers and your staff are intuitive. See for yourself at our <a>partner sites</a>.</p>\n                </div>\n            </div><!--.container-->\n        </div><!--.row-->\n    </div><!--.section-->\n\n    <div class=\"section section-horizontal section-dark\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <!--\n                <div class=\"col-xs-4\">\n                    <h2>Everything</h2>\n                </div>\n                -->\n                <div class=\"col-xs-9 col-xs-offset-2\">\n                    <ul class=\"horizontal-list\">\n                        <li>KYC</li>\n                        <li>Multi-currency</li>\n                        <li>Programmable APIs</li>\n                        <li>Custom integrations</li>\n                    </ul>\n                </div>\n            </div><!--.container-->\n        </div><!--.row-->\n    </div><!--.section-->\n\n    <div class=\"section\" id=\"signup\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"section-header\">\n                    <h2>Request Invitation</h2>\n                </div>\n                <div class=\"col-md-offset-2 col-xs-8\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <h4 class=\"panel-title\">Invitation Form</h4>\n                        </div>\n                        <form class=\"form-signup form-horizontal panel-panel-default\" action=\"/asd\" method=\"post\">\n                            <div class=\"panel-body\">\n\n                                <div class=\"form-group\">\n                                    <label for=\"name\" class=\"col-xs-3 control-label\">Name</label>\n                                    <div class=\"col-xs-9\"><div class=\"input-group\">\n                                            <input name=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Name\" required>\n                                    </div></div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label for=\"email\" class=\"col-xs-3 control-label\">Email</label>\n                                    <div class=\"col-xs-9\"><div class=\"input-group\">\n                                            <input name=\"email\" type=\"text\" class=\"form-control\" placeholder=\"Email\" required>\n                                    </div></div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label for=\"country\" class=\"col-xs-3 control-label\">Country</label>\n                                    <div class=\"col-xs-9\"><div class=\"input-group\">\n                                            <input name=\"country\" type=\"text\" class=\"form-control\" placeholder=\"Country\" required>\n                                    </div></div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label for=\"linkedin\" class=\"col-xs-3 control-label\">LinkedIn</label>\n                                    <div class=\"col-xs-9\"><div class=\"input-group\">\n                                            <input name=\"linkedin\" type=\"text\" class=\"form-control\" placeholder=\"LinkedIn\" required>\n                                    </div></div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label for=\"other\" class=\"col-xs-3 control-label\">Comments</label>\n                                    <div class=\"col-xs-9\"><div class=\"input-group\">\n                                            <textarea name=\"other\" class=\"form-control\" placeholder=\"Questions? Comments? Leave them here!\"></textarea>\n                                    </div></div>\n                                </div>\n\n                            </div><!--.panel-body-->\n\n                            <div class=\"panel-footer clearfix\">\n                                <button class=\"btn btn-custom col-xs-4 pull-right\" type=\"submit\">Send Request</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div><!--.container-->\n        </div><!--.row-->\n    </div><!--.section-->\n\n    <div class=\"section section-horizontal section-dark\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-xs-4 col-md-offset-2\">\n                    <h2 class=\"pull-right\">Visit partner site</h2>\n                </div>\n                <div class=\"col-xs-4\">\n                    <!-- <a href=\"/\" class=\"btn btn-custom-dark col-xs-6\">Go Now &raquo;</a> -->\n                    <h2>(Coming Soon)</h2>\n                </div>\n            </div><!--.container-->\n        </div><!--.row-->\n    </div><!--.section-->\n\n    <div class=\"section\">\n        <div class=\"container\">\n            <div class=\"section-header\">\n                <h2>Recent News</h2>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-8 col-md-offset-2\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <h4><a href=\"#\">Bitcoin Core (Bitcoin-Qt) 0.9.1 released - update required<span class=\"dim\"> 04/08/2014</a></span></h4>\n                            <p>If you are using the graphical version of 0.9.0 on any platform, you must update immediately.<a href=\"https://bitcointalk.org/index.php?topic=562400.msg6132729#msg6132729\">Read more &raquo;</a></p>\n                        </div>\n                    </div>\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <h4><a href=\"#\">BtcTrade closing all deposits.<span class=\"dim\"> 04/09/2014</a></span></h4>\n                            <p><a href=\"http://www.btctrade.com/html/gonggao/0410.html\">Read more &raquo;</a></p>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div><!--.container-->\n        </div><!--.row-->\n    </div><!--.section-->\n\n\n\n</div>\n";
},"useData":true});
templates['beta_success.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "<div id=\"beta\" class=\"col-xs-4 col-xs-offset-4\" style=\"margin-top: 60px;\">\n    <div class=\"panel panel-default row\">\n        <div class=\"panel-heading\">\n            <h4 class=\"panel-title\" style=\"text-align: center\">FtNox Beta Signup</h4>\n        </div>\n        <div class=\"panel-body\">\n            <p>\n                You've been added to the waitlist.<br/>\n                We'll email you at "
    + escapeExpression(((helper = helpers.email || (depth0 && depth0.email)),(typeof helper === functionType ? helper.call(depth0, {"name":"email","hash":{},"data":data}) : helper)))
    + " soon.\n            </p>\n        </div>\n    </div>\n</div>\n";
},"useData":true});
templates['bootstrap_test.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div id=\"bootstrap_test\" class=\"container\">\n<style type=\"text/css\">\n.bs-example {\n    padding: 10px;\n    margin-left: 0;\n    margin-right: 0;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #444;\n    border-radius: 4px 4px 0 0;\n    box-shadow: none;\n}\n.bs-example>.dropdown>.dropdown-menu {\n    position: static;\n    display: block;\n    margin-bottom: 5px;\n}\n</style>\n\n<div id=\"bootstrap_test\">\n\n    <h2>Bootstrap test</h2>\n    <hr/>\n    <p class=\"lead\">\n        This is a theme test for bootstrap components\n    </p>\n    <ul>\n        <li>Here is a list item</li>\n        <li>Here is a list item</li>\n        <li>Here is a list item</li>\n    </ul>\n\n    <h3>Alert test</h3>\n    <div class=\"bs-example\">\n        <div class=\"dropdown clearfix\">\n            <button class=\"btn dropdown-toggle sr-only\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\">\n                Dropdown\n                <span class=\"caret\"></span>\n            </button>\n                <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu2\">\n                <li role=\"presentation\" class=\"dropdown-header\">Dropdown header</li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">Action</a></li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">Another action</a></li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">Something else here</a></li>\n                <li role=\"presentation\" class=\"divider\"></li>\n                <li role=\"presentation\" class=\"dropdown-header\">Dropdown header</li>\n                <li role=\"presentation\"><a role=\"menuitem\" tabindex=\"-1\" href=\"#\">Separated link</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <h3>Alert test</h3>\n    <div class=\"bs-example\">\n        <div class=\"alert alert-success\">\n            <strong>Well done!</strong> You successfully read this important alert message.\n        </div>\n        <div class=\"alert alert-info\">\n            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.\n        </div>\n        <div class=\"alert alert-warning\">\n            <strong>Warning!</strong> Better check yourself, you're not looking too good.\n        </div>\n        <div class=\"alert alert-danger\">\n            <strong>Oh snap!</strong> Change a few things up and try submitting again.\n        </div>\n    </div>\n\n    <div class=\"bs-example\">\n        <div class=\"alert alert-success\">\n            <strong>Well done!</strong> You successfully read <a href=\"#\" class=\"alert-link\">this important alert message</a>.\n        </div>\n        <div class=\"alert alert-info\">\n            <strong>Heads up!</strong> This <a href=\"#\" class=\"alert-link\">alert needs your attention</a>, but it's not super important.\n        </div>\n        <div class=\"alert alert-warning\">\n            <strong>Warning!</strong> Better check yourself, you're <a href=\"#\" class=\"alert-link\">not looking too good</a>.\n        </div>\n        <div class=\"alert alert-danger\">\n            <strong>Oh snap!</strong> <a href=\"#\" class=\"alert-link\">Change a few things up</a> and try submitting again.\n        </div>\n    </div>\n\n    <h3>Code</h3>\n    <div class=\"bs-example\">\n<pre>\nPOST https://ftnox.com/account/balance\nContent-Type: application/x-www-form-urlencoded\n\napi_key=eIsWZZYqy18wx0zPXAKAIvkj\n</pre>\n\n        This is in a code element: <code>blah blah blah</code>\n\n    </div>\n\n</div>\n</div>\n";
  },"useData":true});
templates['breadcrumbs.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n<ol class=\"breadcrumb\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.breadcrumbs), {"name":"each","hash":{},"fn":this.program(2, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</ol>\n";
},"2":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n    ";
  stack1 = helpers['if'].call(depth0, (data == null || data === false ? data : data.last), {"name":"if","hash":{},"fn":this.program(3, data),"inverse":this.program(5, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n    ";
},"3":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "\n    <li class=\"active\">\n        "
    + escapeExpression(((helper = helpers.display || (depth0 && depth0.display)),(typeof helper === functionType ? helper.call(depth0, {"name":"display","hash":{},"data":data}) : helper)))
    + "\n    </li>\n    ";
},"5":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "\n    <li>\n        <a data-name=\""
    + escapeExpression(((helper = helpers.name || (depth0 && depth0.name)),(typeof helper === functionType ? helper.call(depth0, {"name":"name","hash":{},"data":data}) : helper)))
    + "\" href=\""
    + escapeExpression(((helper = helpers.path || (depth0 && depth0.path)),(typeof helper === functionType ? helper.call(depth0, {"name":"path","hash":{},"data":data}) : helper)))
    + "\">"
    + escapeExpression(((helper = helpers.display || (depth0 && depth0.display)),(typeof helper === functionType ? helper.call(depth0, {"name":"display","hash":{},"data":data}) : helper)))
    + "</a>\n    </li>\n    ";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, helperMissing=helpers.helperMissing, buffer = "";
  stack1 = (helper = helpers.ifCond || (depth0 && depth0.ifCond) || helperMissing,helper.call(depth0, ((stack1 = (depth0 && depth0.breadcrumbs)),stack1 == null || stack1 === false ? stack1 : stack1.length), ">", 1, {"name":"ifCond","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n";
},"useData":true});
templates['exchange.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, functionType="function", escapeExpression=this.escapeExpression;
  return "\n        <div class=\"row enter-order\">\n            <div class=\"col-xs-6\">\n                <div class=\"order-form-panel panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h4 class=\"panel-title\">Buy "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</h4>\n                    </div>\n\n                    <!-- todo: replace hard coded values with balance -->   \n                    <div class=\"panel-dark clearfix\">\n                        <div class=\"col-xs-6\">\n                            <p class=\"key\">Your Balance</p>\n                            <p class=\"value available-balance\"><a href=\"/#account\"><span class=\"js-balance\" data-coin=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.basisCoin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">?</span> "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.basisCoin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</a></p>\n                        </div>\n                        <div class=\"col-xs-6\">\n                            <p class=\"key\">Lowest Sell Price</p>\n                            <p class=\"value\">$<span class=\"js-best-ask\" data-market=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">?</span></p> \n                        </div>\n                    </div>\n\n                    <div class=\"panel-body\">\n                        <form class=\"form-buy form-horizontal\">\n                            <div class=\"form-group\">\n                                <label for=\"amount\" class=\"col-xs-4 control-label\">Amount</label>\n                                <div class=\"col-xs-8\"><div class=\"input-group ig-coin\">\n                                    <input name=\"amount\" type=\"text\" class=\"form-control\" placeholder=\"\" required>\n                                    <span class=\"input-group-addon\"><span class=\"coin\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></span>\n                                </div></div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"price\" class=\"col-xs-4 control-label\">Price per "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n                                <div class=\"col-xs-8\"><div class=\"input-group ig-coin\">\n                                    <input name=\"price\" type=\"text\" class=\"form-control js-buy-price\" placeholder=\"\" required value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.bestAsk)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n                                    <span class=\"market-name input-group-addon\"><span class=\"coin\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.basisCoin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></span>\n                                </div></div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"\" class=\"col-xs-4 control-label\">Total Cost</label>\n                                <div class=\"col-xs-8\" style=\"margin-top: 6px;\">\n                                    $<span class=\"send_amount amount\">0</span>  (or less)\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"panel-footer clearfix\">\n                        <button class=\"js-submit-buy btn btn-primary btn-custom pull-right col-xs-4\" type=\"submit\">Buy <strong>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</strong></button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-xs-6\">\n                <div class=\"order-form-panel panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h4 class=\"panel-title\">Sell "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</h4>\n                    </div>\n\n                    <!-- todo: replace hard coded values with balance -->   \n                    <div class=\"panel-dark clearfix\">\n                        <div class=\"col-xs-6\">\n                            <p class=\"key\">Your Balance</p>\n                            <p class=\"value available-balance\"><a href=\"/#account\"><span class=\"js-balance\" data-coin=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">?</span> "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</a></p>\n                        </div>\n                        <div class=\"col-xs-6\">\n                            <p class=\"key\">Highest Buy Price</p>\n                            <p class=\"value\">$<span class=\"js-best-bid\" data-market=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">?</span></p> \n                        </div>\n                    </div>\n\n                    <div class=\"panel-body\">\n                        <form class=\"form-sell form-horizontal\">\n                            <div class=\"form-group\">\n                                <label for=\"amount\" class=\"col-xs-4 control-label\">Amount</label>\n                                <div class=\"col-xs-8\"><div class=\"input-group ig-coin\">\n                                    <input name=\"amount\" type=\"text\" class=\"form-control\" placeholder=\"\" required>\n                                    <span class=\"input-group-addon\"><span class=\"coin\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></span>\n                                </div></div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"price\" class=\"col-xs-4 control-label\">Price per "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</label>\n                                <div class=\"col-xs-8\"><div class=\"input-group ig-coin\">\n                                    <input name=\"price\" type=\"text\" class=\"form-control js-sell-price\" placeholder=\"\" required value=\""
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.bestBid)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\">\n                                    <span class=\"market-name input-group-addon\"><span class=\"coin\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.basisCoin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</span></span>\n                                </div></div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"\" class=\"col-xs-4 control-label\">Total Credit</label>\n                                <div class=\"col-xs-8\" style=\"margin-top: 6px;\">\n                                    $<span class=\"receive_amount amount\">0</span>  (or more)\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"panel-footer clearfix\">\n                        <button class=\"js-submit-sell btn btn-primary btn-custom pull-right col-xs-4\" type=\"submit\">Sell <strong>"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</strong></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        ";
},"3":function(depth0,helpers,partials,data) {
  var helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;
  return "\n        <div class=\"row\">\n            <div class=\"col-xs-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Open Orders</h3>\n                    </div>\n                    <div class=\"panel-body js-pending-orders\">\n                        "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "exchange_pending_orders", (depth0 && depth0.orders), {"name":"render","hash":{},"data":data})))
    + "\n                    </div>\n                </div>\n            </div>\n        </div>\n        ";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = "<div id=\"market\">\n\n    <div class=\"js-exchange-markets ftnox-page-header\">\n        \n    </div>\n\n    <!-- Alerts -->\n    <div id=\"app-alerts\" class=\"container\"></div>\n\n    <div class=\"container\">\n\n        <!--<h2 class=\"row js-marketName coin\">"
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</h2>-->\n\n        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.user), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n\n        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.user), {"name":"if","hash":{},"fn":this.program(3, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n\n        <!-- orderbook chart -->\n        <div class=\"row\">\n            <div class=\"col-xs-12\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Orderbook Chart</h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div class=\"js-chart orderbook-chart\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-xs-6\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Buy Orders</h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div class=\"js-bids\">\n                            "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "exchange_orders", (depth0 && depth0.bids), {"name":"render","hash":{},"data":data})))
    + "\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xs-6\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">Sell Orders</h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <div class=\"js-asks\">\n                            "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "exchange_orders", (depth0 && depth0.asks), {"name":"render","hash":{},"data":data})))
    + "\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div><!--.container-->\n\n</div>\n";
},"useData":true});
templates['exchange_market_button.html'] = template({"1":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return " "
    + escapeExpression(((helper = helpers.last || (depth0 && depth0.last)),(typeof helper === functionType ? helper.call(depth0, {"name":"last","hash":{},"data":data}) : helper)))
    + " "
    + escapeExpression(((helper = helpers.basisCoin || (depth0 && depth0.basisCoin)),(typeof helper === functionType ? helper.call(depth0, {"name":"basisCoin","hash":{},"data":data}) : helper)))
    + "\n        ";
},"3":function(depth0,helpers,partials,data) {
  return " &ndash; ";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, buffer = "<a href=\"/#market/"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "/"
    + escapeExpression(((helper = helpers.basisCoin || (depth0 && depth0.basisCoin)),(typeof helper === functionType ? helper.call(depth0, {"name":"basisCoin","hash":{},"data":data}) : helper)))
    + "\" type=\"button\" role=\"button\" class=\"market-tab js-marketButton\" data-market-name=\""
    + escapeExpression(((helper = helpers.name || (depth0 && depth0.name)),(typeof helper === functionType ? helper.call(depth0, {"name":"name","hash":{},"data":data}) : helper)))
    + "\">\n    <img src=\"/img/"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + ".png\"/>\n    <span>"
    + escapeExpression(((helper = helpers.coin || (depth0 && depth0.coin)),(typeof helper === functionType ? helper.call(depth0, {"name":"coin","hash":{},"data":data}) : helper)))
    + "/"
    + escapeExpression(((helper = helpers.basisCoin || (depth0 && depth0.basisCoin)),(typeof helper === functionType ? helper.call(depth0, {"name":"basisCoin","hash":{},"data":data}) : helper)))
    + "</span>\n    <span class=\"small\">\n        ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.last), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.program(3, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n    </span>\n</a>\n";
},"useData":true});
templates['exchange_markets.html'] = template({"1":function(depth0,helpers,partials,data) {
  var helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;
  return "\n        "
    + escapeExpression((helper = helpers.render || (depth0 && depth0.render) || helperMissing,helper.call(depth0, "exchange_market_button", depth0, {"name":"render","hash":{},"data":data})))
    + "\n    ";
},"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<div class=\"container\">\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.markets), {"name":"each","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</div>\n";
},"useData":true});
templates['exchange_orders.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.orders), {"name":"each","hash":{},"fn":this.program(2, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n            ";
},"2":function(depth0,helpers,partials,data) {
  var stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";
  return "\n            <tr>\n                <td class=\"amount\">$"
    + escapeExpression((helper = helpers.toPrecision || (depth0 && depth0.toPrecision) || helperMissing,helper.call(depth0, (depth0 && depth0.fp), 5, {"name":"toPrecision","hash":{},"data":data})))
    + "</td>\n                <td class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.a), {"name":"divide8","hash":{},"data":data})))
    + " "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</td>\n                \n            </tr>\n            ";
},"4":function(depth0,helpers,partials,data) {
  return "\n            <tr>\n                <td colspan=\"2\" style=\"text-align: center;\">No orders</td>\n            </tr>\n            ";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<div class=\"exchange-orders\">\n    <table class=\"table table-striped table-condensed\">\n        <thead><tr>\n            <th>Price</th>\n            <th>Amount</th>\n        </tr></thead>\n        <tbody class=\"js-exchange-orders-body exchange-orders-body\">\n            ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.orders), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.program(4, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n        </tbody>\n    </table>\n</div>\n";
},"useData":true});
templates['exchange_pending_orders.html'] = template({"1":function(depth0,helpers,partials,data) {
  var stack1, buffer = "\n    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.orders), {"name":"each","hash":{},"fn":this.programWithDepth(2, data, depth0),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n    ";
},"2":function(depth0,helpers,partials,data,depth1) {
  var stack1, helper, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, buffer = "\n    <tr data-order-id=\""
    + escapeExpression(((helper = helpers.id || (depth0 && depth0.id)),(typeof helper === functionType ? helper.call(depth0, {"name":"id","hash":{},"data":data}) : helper)))
    + "\" ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isNew), {"name":"if","hash":{},"fn":this.program(3, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += ">\n        ";
  stack1 = (helper = helpers.ifCond || (depth0 && depth0.ifCond) || helperMissing,helper.call(depth0, (depth0 && depth0.type), "==", "B", {"name":"ifCond","hash":{},"fn":this.program(5, data),"inverse":this.program(7, data),"data":data}));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n        <td class=\"date\">"
    + escapeExpression((helper = helpers.formatDate || (depth0 && depth0.formatDate) || helperMissing,helper.call(depth0, (depth0 && depth0.time), {"name":"formatDate","hash":{
    'format': ("YYYY-MM-DD hh:mma")
  },"data":data})))
    + "</td>\n        <td class=\"amount\">$"
    + escapeExpression((helper = helpers.toPrecision || (depth0 && depth0.toPrecision) || helperMissing,helper.call(depth0, (depth0 && depth0.price), 5, {"name":"toPrecision","hash":{},"data":data})))
    + "</td>\n        <td class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.amount), {"name":"divide8","hash":{},"data":data})))
    + " "
    + escapeExpression(((stack1 = ((stack1 = (depth1 && depth1.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</td>\n        <td class=\"amount\">"
    + escapeExpression((helper = helpers.divide8 || (depth0 && depth0.divide8) || helperMissing,helper.call(depth0, (depth0 && depth0.filled), {"name":"divide8","hash":{},"data":data})))
    + " "
    + escapeExpression(((stack1 = ((stack1 = (depth1 && depth1.market)),stack1 == null || stack1 === false ? stack1 : stack1.coin)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "</td>\n        <td><a href=\"#\" class=\"js-cancel-order btn btn-default btn-xs\" data-order-id=\""
    + escapeExpression(((helper = helpers.id || (depth0 && depth0.id)),(typeof helper === functionType ? helper.call(depth0, {"name":"id","hash":{},"data":data}) : helper)))
    + "\" type=\"submit\">Cancel</a></td>\n    </tr>\n    ";
},"3":function(depth0,helpers,partials,data) {
  return "class=\"info\"";
  },"5":function(depth0,helpers,partials,data) {
  return "\n        <td>Buy</td>\n        ";
  },"7":function(depth0,helpers,partials,data) {
  return "\n        <td>Sell</td>\n        ";
  },"9":function(depth0,helpers,partials,data) {
  return "\n    <tr>\n        <td colspan=\"6\" style=\"text-align: center;\">You have no open orders</td>\n    </tr>\n    ";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<table class=\"table table-striped table-condensed head\">\n<thead>\n    <tr>\n        <th>Type</th>\n        <th>Date</th>\n        <th>Price</th>\n        <th style=\"vertical-align: middle;\">Amount</th>\n        <th>Filled</th>\n        <th></th>\n    </tr>\n</thead>\n<tbody>\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.orders), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.program(9, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</tbody>\n</table>\n";
},"useData":true});
templates['layout.html'] = template({"1":function(depth0,helpers,partials,data) {
  return "\n                    <li name=\"market\"><a class=\"active\" href=\"/#market\">Trade</a></li>\n                ";
  },"3":function(depth0,helpers,partials,data) {
  var stack1, functionType="function", escapeExpression=this.escapeExpression, buffer = "\n\n                    <li class=\"btn-group\">\n                      <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n                        "
    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.user)),stack1 == null || stack1 === false ? stack1 : stack1.email)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + " <span class=\"caret\"></span>\n                      </button>\n                      <ul class=\"dropdown-menu\" role=\"menu\">\n                        <li><a href=\"/#account/balance\">Balance TODO</a></li>\n                        <li><a href=\"/#account/history\">History TODO</a></li>\n                        <li><a href=\"/#account/security\">Security TODO</a></li>\n                        <li><a href=\"/#account/api\">API TODO</a></li>\n                        ";
  stack1 = helpers['if'].call(depth0, ((stack1 = ((stack1 = (depth0 && depth0.user)),stack1 == null || stack1 === false ? stack1 : stack1.roles)),stack1 == null || stack1 === false ? stack1 : stack1.treasury), {"name":"if","hash":{},"fn":this.program(4, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n                        <li class=\"divider\"></li>\n                        <li><a href=\"/#logout\">Logout</a></li>\n                      </ul>\n                    </li>\n\n                ";
},"4":function(depth0,helpers,partials,data) {
  return "\n                            <li class=\"divider\"></li>\n                            <li name=\"treasury\"><a href=\"/treasury/\">Admin</a></li>\n                        ";
  },"6":function(depth0,helpers,partials,data) {
  return "\n                    <li name=\"login\"><a href=\"/#login\">Login</a></li>\n                ";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", buffer = "<!-- Fixed navbar -->\n<div id=\"navbar\" class=\"navbar navbar-default navbar-static-top\" role=\"navigation\">\n    <div class=\"container\">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"/\" style=\"padding-top: 8px;\">\n                <img src=\"/img/logo.png\" alt=\"FtNox\" height=\"44\"/>\n            </a>\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\n                <span class=\"sr-only\">Toggle navigation</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n        </div>\n        <div class=\"collapse navbar-collapse\" id=\"navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.user), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                    <li name=\"account\"><a href=\"/#account\">Account</a></li>\n                    <li name=\"about\"><a href=\"/#about\">About</a></li>\n\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.user), {"name":"if","hash":{},"fn":this.program(3, data),"inverse":this.program(6, data),"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n            </ul>\n        </div>\n    </div>\n</div>\n\n<!-- Begin page content -->\n<div id=\"content\">";
  stack1 = ((helper = helpers.content || (depth0 && depth0.content)),(typeof helper === functionType ? helper.call(depth0, {"name":"content","hash":{},"data":data}) : helper));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "</div>\n\n<div id=\"footer\">\n    <div class=\"container\">\n        <div class=\"col-xs-3\">\n            <h5>About</h5>\n            <ul>\n                <li><a href=\"#about\">About</a></li>\n                <li><a href=\"#\">Legal</a></li>\n                <li>&nbsp;</li>\n                <li>&copy; 2014 AllInBits, Inc.</li>\n            </ul>\n        </div>\n        <div class=\"col-xs-3\">\n            <h5>Resources</h5>\n            <ul>\n                <li><a href=\"#api\">API</a></li>\n            </ul>\n        </div>\n        <div class=\"col-xs-3\">\n            <h5>Location</h5>\n            <ul>\n                <li>Ft Nox</li>\n                <li>2501 Bryant St,</li>\n                <li>San Francisco, CA 94110</li>\n                <li><a href=\"callto:+14154098733\">+14154098733</a></li>\n            </ul>\n        </div>\n        <div class=\"col-xs-3\">\n            <h5>Contact</h5>\n            <ul>\n                <li><a href=\"mailto:hello@ftnox.com\">hello@ftnox.com</a></li>\n                <li><a href=\"mailto:invest@ftnox.com\">invest@ftnox.com</a></li>\n                <li><a href=\"mailto:careers@ftnox.com\">careers@ftnox.com</a></li>\n                <li><a href=\"https://twitter.com/ft_nox\">@ft_nox (Twitter)</a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n";
},"useData":true});
templates['loggedout.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div class=\"alert alert-success\">You have logged out successfully</div>\n";
  },"useData":true});
templates['login.html'] = template({"1":function(depth0,helpers,partials,data) {
  return "\n                <div class=\"form-group\">\n                    <input name=\"totp_code\" type=\"text\" class=\"form-control\" placeholder=\"6 digit auth token\" required>\n                </div>\n                ";
  },"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, buffer = "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>Login</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div id=\"login\" class=\"col-xs-4 col-xs-offset-4\">\n    <div class=\"panel panel-default row\">\n        <div class=\"panel-heading\">\n            <h4 class=\"panel-title\" style=\"text-align: center\">Login</h4>\n        </div>\n        <form class=\"form-login\">\n            <div class=\"panel-body\">\n                <div class=\"form-group\">\n                    <input name=\"email\" type=\"text\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n                </div>\n                <div class=\"form-group\">\n                    <input name=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                </div>\n                ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireTOTP), {"name":"if","hash":{},"fn":this.program(1, data),"inverse":this.noop,"data":data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n            </div>\n            <div class=\"panel-footer\">\n                <button class=\"btn btn-custom\" type=\"submit\">Login</button>\n                <span style=\"margin-left: 10px;\">\n                    or <a href=\"/#register\">Register</a>\n                </span>\n            </div>\n        </form>\n    </div>\n</div>\n";
},"useData":true});
templates['register.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>Register</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div id=\"register\" class=\"col-xs-4 col-xs-offset-4\">\n    <div class=\"panel panel-default row\">\n        <div class=\"panel-heading\">\n            <h4 class=\"panel-title\" style=\"text-align: center\">Register</h4>\n        </div>\n        <form class=\"form-register\">\n            <div class=\"panel-body\">\n                <div class=\"form-group\">\n                    <input name=\"email\" type=\"text\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n                </div>\n                <div class=\"form-group\">\n                    <input name=\"password\"  type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input name=\"password2\" type=\"password\" class=\"form-control\" placeholder=\"Password Repeat\" required>\n                </div>\n            </div>\n            <div class=\"panel-footer clearfix\">\n                <button class=\"btn btn-custom\" type=\"submit\">Register</button>\n                <span style=\"margin-left: 10px;\">\n                    or <a href=\"/#login\">Login</a>\n                </span>\n            </div>\n        </form>\n    </div>\n</div>\n";
  },"useData":true});
templates['register_confirmed.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var helper, functionType="function", escapeExpression=this.escapeExpression;
  return "<div class=\"ftnox-page-header\">\n    <div class=\"container\">\n        <h2>Register</h2>\n    </div>\n</div>\n\n<!-- Alerts -->\n<div id=\"app-alerts\" class=\"container\"></div>\n\n<div id=\"register\" class=\"col-xs-4 col-xs-offset-4\">\n    <div class=\"panel panel-default row\">\n        <div class=\"panel-heading\">\n            <h4 class=\"panel-title\" style=\"text-align: center\">Registered!</h4>\n        </div>\n        <div class=\"container\">\n            <p class=\"lead\">Now check your email at <b>"
    + escapeExpression(((helper = helpers.email || (depth0 && depth0.email)),(typeof helper === functionType ? helper.call(depth0, {"name":"email","hash":{},"data":data}) : helper)))
    + "</b> and click on the confirmation link.</p>\n            <p>If you don't see the email, check your spambox.</p>\n        </div>\n    </div>\n</div>\n";
},"useData":true});
templates['static_base.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  var stack1, helper, functionType="function", buffer = "<!DOCTYPE html>\n<html>\n<head>\n    <title>FtNox</title>\n    <link rel=\"stylesheet\" media=\"screen\" href=\"/css/bootstrap.sortable.css\"></link>\n    <link rel=\"stylesheet\" media=\"screen\" href=\"/css/style.css\"></link>\n    <link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\">\n    <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\">\n</head>\n<body>\n\n<!-- Everything goes in here -->\n<div id=\"main\">\n    ";
  stack1 = ((helper = helpers.main || (depth0 && depth0.main)),(typeof helper === functionType ? helper.call(depth0, {"name":"main","hash":{},"data":data}) : helper));
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer + "\n</div>\n\n<!-- Placed at the end so page loads faster -->\n<script src=\"/js/jquery.min.js\"></script>\n<script src=\"/js/bootstrap.js\"></script>\n<script src=\"/js/bootstrap.sortable.js\"></script>\n<script src=\"/js/jquery.cookie.js\"></script>\n<script src=\"/js/jquery.qrcode.min.js\"></script>\n<script src=\"/js/sugar.min.js\"></script>\n<script src=\"/js/moment.min.js\"></script>\n<script src=\"/js/d3.v3.min.js\"></script>\n<script src=\"/js/chart.js\"></script>\n\n</body>\n</html>\n";
},"useData":true});
templates['totp_confirm.html'] = template({"compiler":[5,">= 2.0.0"],"main":function(depth0,helpers,partials,data) {
  return "<div class=\"col-xs-6 col-xs-offset-3\" style=\"margin-top: 60px;\">\n    <div class=\"panel panel-default row\">\n        <div class=\"panel-heading\">\n            <h4 class=\"panel-title\" style=\"text-align: center\">Set up Two Factor Authentication</h4>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"row\">\n                <div class=\"col-xs-7\">\n                    <p>\n                        Two Factor Authentication is required to protect your account.<br/>\n                        Install <a href=\"https://support.google.com/accounts/answer/1066447?hl=en\">Google Authenticator</a>,\n                        then scan the barcode and enter the 6 digit code.\n                    </p>\n                    <form class=\"form-totp form-inline\">\n                        <input name=\"code\" type=\"text\" class=\"form-control\" style=\"width: 140px;\" placeholder=\"6 digit auth code\" required autofocus>\n                        <button class=\"btn btn-primary\" type=\"submit\" style=\"\">Submit</button>\n                    </form>\n                </div>\n                <div class=\"col-xs-5\">\n                    <img src=\"/auth/totp_qr.png\" style=\"width: 100%;\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n";
  },"useData":true});
})();